/*!
   @file WiFiConnectParam.h

   WiFi Connection Manager with Captive Portal.
   This file contains the bitmap data for the OLED screen images

   Introduction

   This is the documentation for WiFiConnect for the Arduino platform.
   It is a WiFi connection manager for use with the popular ESP8266 and ESP32 chips.
   It contains a captive portal to allow easy connection and changing of WiFi netwoks
   via a web based interface and allows for additional user parameters.
   It can also display messages via a OLED screen see WiFiConnectOLED class.

   This is a heavily customised version from the origional <a href="https://github.com/tzapu/WiFiManager">WiFiManager</a>
   developed by https://github.com/tzapu .

   Dependencies

   This library depends on <a href="https://github.com/esp8266/Arduino">
    ESP8266 Arduino Core</a> and <a href="https://github.com/espressif/arduino-esp32">ESP32 Arduino Core</a> being present on your system.
    Please make sure you have installed the latest version before using this library.

   
   Written by Stuart Blair.

   License

   GNU General Public License v3.0 licence, all text here must be included in any redistribution and you should receive a copy of the license file.

*/
#ifndef WiConnectImages
#define WifiConnectImages
const int ap_param_dataW = 40; ///< Defines the Width of this image
const int ap_param_dataH = 32; ///< Defines the Height of this image
/** The image pixel data bytes */
const byte ap_param_data[] PROGMEM = {
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x00,0x00,0x00,0xe0,0x03,0x02,0x00,0x00,
     0xf0,0x07,0x07,0x00,0x00,0xe0,0x87,0x1f,0x00,0x00,0xf0,0xff,0x1f,0x00,0x00,0xe0,
     0xff,0x0f,0x00,0xc0,0xf1,0xff,0x0f,0x00,0xc0,0xff,0xff,0x0f,0x00,0xe0,0xff,0xff,
     0x0f,0x00,0xe0,0x7f,0xc0,0xdf,0x01,0xf0,0x3f,0x00,0xff,0x03,0xc0,0x1f,0x00,0xff,
     0x03,0x80,0x0f,0x00,0xfe,0x03,0x80,0x0f,0x00,0xfc,0x07,0x80,0x0f,0x00,0xfc,0x03,
     0x80,0x0f,0x00,0xfc,0x00,0xe0,0x0f,0x00,0x7c,0x00,0xf8,0x0f,0x00,0x3c,0x00,0xf0,
     0x0f,0x00,0x7e,0x00,0xf0,0x1f,0x00,0xfe,0x00,0xf0,0x3f,0x00,0xff,0x01,0xf0,0x7f,
     0x80,0xff,0x03,0x00,0xfe,0xe1,0xff,0x01,0x00,0xfc,0xff,0xff,0x00,0x00,0xfc,0xff,
     0xf7,0x00,0x00,0xfc,0xff,0x41,0x00,0x00,0xfe,0xff,0x01,0x00,0x00,0xfe,0xfc,0x01,
     0x00,0x00,0x7c,0xf8,0x01,0x00,0x00,0x30,0xf0,0x01,0x00,0x00,0x00,0x70,0x00,0x00
}; 
const int manual_reset_dataW = 128; ///< Defines the Width of this image
const int manual_reset_dataH = 64; ///< Defines the Height of this image
/** The image pixel data bytes */
const byte manual_reset_data[] PROGMEM = {
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xf8,0xe3,0xff,0xff,0xff,0xff,0x7f,0xfe,0x01,0xfe,0xff,0xff,0xff,0xff,0xff,
     0xff,0xf0,0xe1,0xff,0xff,0xff,0xff,0x7f,0xfe,0x01,0xfc,0xff,0xff,0xff,0x3f,0xff,
     0xff,0xf0,0xe1,0xff,0xff,0xff,0xff,0x7f,0xfe,0xf9,0xf8,0xff,0xff,0xff,0x3f,0xff,
     0xff,0xf0,0xe1,0xff,0xff,0xff,0xff,0x7f,0xfe,0xf9,0xf9,0xff,0xff,0xff,0x3f,0xff,
     0xff,0xe4,0xe4,0xc1,0x09,0xe7,0x79,0x70,0xfe,0xf9,0xf9,0xe0,0x83,0x1f,0x1c,0xfc,
     0xff,0xe4,0x64,0x80,0x01,0xe6,0x19,0x60,0xfe,0xf9,0x78,0xc0,0x01,0x0f,0x18,0xfc,
     0xff,0xe4,0x64,0x9e,0x71,0xe6,0x99,0x67,0xfe,0x01,0x3c,0xce,0x79,0xc6,0x39,0xff,
     0xff,0xe4,0xe4,0x87,0x79,0xe6,0xf9,0x61,0xfe,0x01,0x3e,0x9f,0xf1,0xe7,0x33,0xff,
     0xff,0x4c,0xe6,0x80,0x79,0xe6,0x39,0x60,0xfe,0x39,0x3f,0x80,0xc3,0x07,0x30,0xff,
     0xff,0x4c,0x66,0x98,0x79,0xe6,0x19,0x66,0xfe,0x79,0x3e,0x80,0x0f,0x07,0x30,0xff,
     0xff,0x4c,0x66,0x9e,0x79,0xe6,0x99,0x67,0xfe,0x79,0x3c,0xff,0x3f,0xe6,0x3f,0xff,
     0xff,0x5c,0x67,0x8e,0x79,0xe6,0x98,0x63,0xfe,0xf9,0x38,0x9e,0x79,0xc6,0x33,0xff,
     0xff,0x1c,0x67,0x80,0x79,0x06,0x18,0x60,0xfe,0xf9,0x79,0xc0,0x03,0x0e,0x38,0xfc,
     0xff,0x1c,0xe7,0x30,0x79,0x0e,0x39,0x4c,0xfe,0xf9,0xf1,0xe0,0x07,0x1f,0x7c,0xfc,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0x3f,0xc0,0xff,0xff,0xff,0xff,0xe7,0xff,0xff,0x7f,0xfe,
     0xff,0xff,0xff,0xff,0xff,0x3f,0x80,0xff,0xff,0xff,0xff,0xe7,0xff,0xff,0x7f,0xfe,
     0xff,0xff,0xff,0xff,0xff,0x3f,0x1f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0xfe,
     0xff,0xff,0xff,0xff,0xff,0x3f,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,0xfe,
     0xff,0xff,0x7f,0xfa,0xff,0x3f,0x3f,0x1f,0xfc,0x90,0x79,0x66,0x72,0xf0,0x43,0xfe,
     0xff,0xff,0x7f,0xf7,0xff,0x3f,0x1f,0x0f,0x78,0x80,0x79,0x66,0x30,0xe0,0x01,0xfe,
     0xff,0xff,0xa7,0xed,0xff,0x3f,0x80,0xc7,0x39,0x8e,0x79,0x66,0x1c,0xe7,0x38,0xfe,
     0xff,0xff,0xf7,0xdb,0xff,0x3f,0xc0,0xe7,0x33,0x9f,0x79,0x66,0x9e,0xcf,0x7c,0xfe,
     0xff,0x7f,0x6d,0xb7,0xff,0x3f,0xe7,0x07,0x30,0x9f,0x79,0x66,0x1e,0xc0,0x7c,0xfe,
     0xff,0x7f,0xff,0x6e,0xff,0x3f,0xcf,0x07,0x30,0x9f,0x79,0x66,0x1e,0xc0,0x7c,0xfe,
     0xff,0xa7,0xdb,0xfb,0xfe,0x3f,0x8f,0xe7,0x3f,0x9f,0x79,0x66,0x9e,0xff,0x7c,0xfe,
     0xff,0xf7,0xbf,0xbf,0xfd,0x3f,0x1f,0xc7,0x73,0x8e,0x39,0x66,0x1e,0xcf,0x38,0xfe,
     0x7f,0xba,0xed,0xdb,0xf9,0x3f,0x3f,0x0f,0x78,0x80,0x01,0x66,0x3e,0xe0,0x01,0xfe,
     0x7f,0xef,0xfe,0x6e,0xf9,0x3f,0x3f,0x1e,0xfc,0x90,0x43,0x66,0x7e,0xf0,0x43,0xfe,
     0xbf,0xbb,0xb7,0x5b,0xfa,0xff,0xff,0xff,0xff,0x9f,0xff,0xff,0xff,0xff,0xff,0xff,
     0xdf,0xff,0x7b,0x57,0xf9,0xff,0xff,0xff,0xff,0x9f,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xdb,0xde,0x2a,0xf8,0xff,0xff,0xff,0xff,0x9f,0xff,0xff,0xff,0xff,0xff,0xff,
     0xdf,0xf5,0x6f,0x45,0xfd,0xff,0xff,0xff,0xff,0x9f,0xff,0xff,0xff,0xff,0xff,0xff,
     0x7f,0x6d,0xbb,0x12,0xfc,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xbf,0xba,0x57,0x45,0xfd,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0x7f,0xed,0x25,0xd0,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x74,0x55,0xc5,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xbb,0x02,0xec,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x37,0x55,0xfd,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x57,0xc0,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x2f,0xd5,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x1f,0xec,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x7f,0xfd,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xfe,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};

const int wifi_connected_width=48; ///< Defines the Width of this image
const int wifi_connected_height=40; ///< Defines the Height of this image
/** The image pixel data bytes */
const byte wifi_connected_data[] PROGMEM = {
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     0xf4,0x5f,0x00,0x00,0x00,0x80,0xff,0xff,0x01,0x00,0x00,0xf8,0xff,0xff,0x0f,0x00,
     0x00,0xfc,0xff,0xff,0x7f,0x00,0x80,0xff,0xff,0xff,0xff,0x01,0xc0,0xff,0x2f,0xe0,
     0xff,0x03,0xf0,0xff,0x00,0x00,0xff,0x0f,0xf8,0x3f,0x00,0x00,0xf8,0x1f,0xfc,0x07,
     0x00,0x00,0xe0,0x3f,0xfc,0x01,0xfe,0x7f,0x80,0x3f,0xfc,0x00,0xff,0xff,0x01,0x3f,
     0x7c,0xe0,0xff,0xff,0x0f,0x3c,0x18,0xf8,0xff,0xff,0x1f,0x18,0x00,0xfc,0xff,0xff,
     0x3f,0x00,0x00,0xfe,0x0f,0xe0,0xff,0x00,0x00,0xff,0x01,0x80,0xff,0x00,0x00,0x7f,
     0x00,0x00,0xfe,0x00,0x00,0x3f,0x40,0x03,0xfc,0x00,0x00,0x0e,0xf8,0x1f,0x70,0x00,
     0x00,0x00,0xfe,0x7f,0x00,0x00,0x00,0x00,0xff,0xff,0x00,0x00,0x00,0x80,0xff,0xff,
     0x03,0x00,0x00,0xc0,0xff,0xff,0x03,0x00,0x00,0xc0,0x1f,0xf0,0x03,0x00,0x00,0xc0,
     0x07,0xe0,0x03,0x00,0x00,0x80,0x03,0xc0,0x01,0x00,0x00,0x00,0x80,0x01,0x00,0x00,
     0x00,0x00,0xc0,0x03,0x00,0x00,0x00,0x00,0xe0,0x07,0x00,0x00,0x00,0x00,0xe0,0x07,
     0x00,0x00,0x00,0x00,0xe0,0x07,0x00,0x00,0x00,0x00,0xc0,0x07,0x00,0x00,0x00,0x00,
     0x80,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
const int ap_dataW = 40; ///< Defines the Width of this image
const int ap_dataH = 32; ///< Defines the Height of this image
/** The image pixel data bytes */
const byte ap_data[] PROGMEM = {
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x60,0x00,0x00,0x00,0x06,0xf0,
     0x00,0x00,0x00,0x0f,0x70,0x00,0x00,0x00,0x0e,0x78,0x02,0x00,0x40,0x1e,0x38,0x03,
     0x00,0xc0,0x1c,0xb8,0x07,0x00,0xe0,0x1d,0x9c,0x03,0x00,0xe0,0x39,0x9c,0x17,0x00,
     0xc8,0x39,0xdc,0x39,0x00,0x9c,0x3b,0xde,0x3b,0x08,0xdc,0x7b,0xce,0x39,0x3c,0x9c,
     0x73,0xde,0x3d,0x7e,0xbc,0x7b,0xce,0x19,0x7e,0x98,0x73,0xde,0x39,0x7f,0xbc,0x7b,
     0xce,0x39,0x3e,0x9c,0x6b,0x9c,0x3b,0x3c,0xdc,0x39,0xdc,0x73,0x1c,0xde,0x3b,0x9c,
     0x33,0x3c,0xcc,0x39,0xb8,0x17,0x1c,0xe4,0x1d,0x38,0x07,0x1c,0xe0,0x1c,0x78,0x0f,
     0x38,0xf0,0x1a,0x70,0x06,0x1c,0x60,0x0e,0xf0,0x00,0x1c,0x00,0x0f,0xe0,0x01,0x3c,
     0x80,0x07,0xa0,0x00,0x18,0x00,0x03,0x40,0x00,0x3c,0x00,0x02,0x00,0x00,0x1c,0x00,
     0x00,0x00,0x00,0x18,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00
};
const int wcInitW = 128; ///< Defines the Width of this image
const int wcInitH = 64; ///< Defines the Height of this image
/** The image pixel data bytes */
const byte wcInit[] PROGMEM = {
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x3f,0x8e,0x27,0x07,0xe6,0xff,0xe0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0x3f,0x8e,0xe3,0xe7,0xff,0x3f,0xe6,0xff,0xff,0xff,0xff,0xff,0x9f,0xff,0xff,
     0xff,0x7f,0x8e,0xf3,0xe7,0xff,0x3f,0xff,0xff,0xff,0xff,0xff,0xff,0x9f,0xff,0xff,
     0xff,0x7f,0x0e,0x33,0xe7,0xe7,0x9f,0xff,0xe1,0x81,0x03,0x1f,0x3e,0x0c,0xfe,0xff,
     0xff,0x7f,0x24,0x31,0xe7,0xe7,0x9f,0xff,0xcc,0x11,0x23,0xce,0x9c,0x9f,0xff,0xff,
     0xff,0xff,0x24,0x39,0x07,0xe6,0x9f,0x7f,0x9e,0x39,0x73,0xe6,0xcc,0x9f,0xff,0xff,
     0xff,0xff,0x24,0x39,0xe7,0xe7,0x9f,0x7f,0x9e,0x39,0x73,0x06,0xcc,0x9f,0xff,0xff,
     0xff,0xff,0x60,0x38,0xe7,0xe7,0x9f,0x7f,0x9e,0x39,0x73,0xe6,0xcf,0x9f,0xff,0xff,
     0xff,0xff,0x70,0x38,0xe7,0xe7,0x3f,0x7f,0x9e,0x39,0x73,0xe6,0xcf,0x9f,0xff,0xff,
     0xff,0xff,0x71,0x3c,0xe7,0xe7,0x3f,0xe6,0xcc,0x39,0x73,0x46,0x9e,0x9f,0xff,0xff,
     0xff,0xff,0x71,0x3c,0xe7,0xe7,0x7f,0xe0,0xe1,0x39,0x73,0x0e,0x1e,0x3c,0xfe,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xcf,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xcf,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0x7f,0x01,0xf4,0xff,0xff,0xff,0xff,0x0f,0x66,0xfe,0xff,0xff,0xff,0xff,
     0xff,0xff,0x07,0x00,0x40,0xff,0xff,0xff,0xff,0x8f,0x64,0xfe,0xff,0xff,0xff,0xff,
     0xff,0xff,0x00,0x00,0x00,0xfc,0xff,0xff,0xff,0xcf,0x0c,0xff,0xff,0xff,0xff,0xff,
     0xff,0x3f,0x00,0x00,0x00,0xf0,0xff,0xff,0xff,0xcf,0x0c,0xff,0xff,0xff,0xff,0xff,
     0xff,0x0f,0x00,0x00,0x00,0xc0,0xff,0xff,0xff,0xcf,0x0c,0xff,0xff,0xff,0xff,0xff,
     0xff,0x07,0x00,0xba,0x02,0x80,0xff,0xff,0xff,0x0f,0x9e,0xff,0xff,0xff,0xff,0xff,
     0xff,0x03,0xe0,0xff,0x1f,0x00,0xfe,0xff,0xff,0xff,0x9f,0xff,0xff,0xff,0xff,0xff,
     0xff,0x00,0xf4,0xff,0xff,0x00,0xfc,0xff,0xff,0xff,0xc7,0xff,0xff,0xff,0xff,0xff,
     0x7f,0x00,0xff,0xb7,0xff,0x03,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0x7f,0xc0,0xbf,0x00,0xf8,0x0f,0xf8,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0x7f,0xe0,0x1f,0x00,0xc0,0x1f,0xf0,0xff,0x60,0xfe,0xff,0xff,0xf3,0xff,0xff,0xff,
     0x7f,0xf0,0x03,0x00,0x00,0x7f,0xf8,0x7f,0x66,0xfe,0xff,0xff,0xf3,0xff,0xff,0xff,
     0xff,0xfc,0x00,0x00,0x00,0xfc,0xfc,0x7f,0x3e,0xc8,0x1c,0x0e,0xc0,0xff,0xff,0xff,
     0xff,0x7f,0x01,0x00,0x00,0xf8,0xff,0x7f,0x7c,0xce,0xfc,0x8c,0xf3,0xff,0xff,0xff,
     0xff,0x3f,0x00,0xfe,0x03,0xe0,0xff,0xff,0x71,0xce,0xfc,0xcc,0xf3,0xff,0xff,0xff,
     0xff,0x1f,0xc0,0xff,0x0f,0xe0,0xff,0xff,0x63,0xce,0x1c,0xcc,0xf3,0xff,0xff,0xff,
     0xff,0x1f,0xf0,0xff,0x3f,0xc0,0xff,0xff,0x67,0xce,0xcc,0xcc,0xf3,0xff,0xff,0xff,
     0xff,0x1f,0xf8,0x57,0xff,0xe0,0xff,0x7f,0x66,0x4e,0xcc,0xcc,0xf3,0xff,0xff,0xff,
     0xff,0x3f,0xfe,0x00,0xf8,0xf1,0xff,0x7f,0x70,0x18,0x1c,0xcc,0xc3,0xff,0xff,0xff,
     0xff,0xff,0x3f,0x00,0xf0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0x1f,0x00,0xc0,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0x0f,0x00,0x80,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0x07,0x00,0x80,0xff,0xff,0xff,0xff,0xcf,0xff,0xfc,0xff,0xff,0xff,0xff,
     0xff,0xff,0x07,0xfc,0x01,0xff,0xff,0xff,0x0f,0xce,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0x07,0xff,0x83,0xff,0xff,0xff,0xcf,0xcc,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0x9f,0xff,0xd7,0xff,0xff,0xff,0xcf,0xcc,0xe1,0x0c,0xfe,0xff,0xff,0xff,
     0xff,0xff,0xff,0xdf,0xff,0xff,0xff,0xff,0xcf,0xcc,0xcf,0x8c,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0x87,0xff,0xff,0xff,0xff,0x0f,0xce,0xcf,0xcc,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0x03,0xff,0xff,0xff,0xff,0xcf,0xcc,0xc1,0xcc,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0x03,0xfe,0xff,0xff,0xff,0xcf,0xcc,0xcc,0xcc,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0x03,0xff,0xff,0xff,0xff,0xcf,0xcc,0xcc,0xcc,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0x07,0xff,0xff,0xff,0xff,0x0f,0xce,0xc1,0xcc,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xcf,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
     0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff
};
#endif
